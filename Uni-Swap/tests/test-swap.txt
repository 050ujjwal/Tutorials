// const { ethers } = require("hardhat");

// // const { artifacts } = require("hardhat")
// // const IERC20 = artifacts.require("../contracts/interfaces/IERC20")
// // const TestUniswap = artifacts.require("../contracts/interfaces/Uniswap");

// describe("testSwap", (accounts) => {
//     const DAI = "0x6B175474E89094C44Da98b954EedeAC495271d0F";
//     const DAI_WHALE = "0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE"; 
//     // make sure the address has enough DAI token
//     const WBTC = "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599";

//     const WHALE = DAI_WHALE;
//     const AMOUNT_IN = 100000000;;
//     const AMOUNT_OUT_MIN = 1;
//     const TOKEN_IN = DAI;
//     const TOKEN_OUT = WBTC;
//     const TO = accounts[0];

//     it("should swap", async () => {
//         const IRC = await ethers.getContractFactory("testSwap");
//         const deployedIRC = await IRC.deploy()
//         const tokenIn = await deployedIRC.at(TOKEN_IN);
//         const tokenOut = await deployedIRC.at(TOKEN_OUT);
//         const TestSwap = await TestUniswap.new();

//         // make sure whale has enough ETH to send tx
//         await tokenIn.approve(TestSwap.address, AMOUNT_IN, {from: WHALE})
//         await TestUniswap.swap(
//             tokenIn.address,
//             tokenOut.address,
//             AMOUNT_IN,
//             AMOUNT_OUT_MIN,
//             TO,
//             {
//                 from: WHALE,
//             }
//         );
//         console.log(`in ${AMOUNT_IN}`);
//         console.log(`out ${await tokenOut.balanceOf(TO)}`);
//     })
// })